server {
    listen      80;
    listen [::]:80; # For IPv6 connections

    server_name cloud.example.com;

    # ACME challenge
    include servers.d/common/letsencrypt;

    # Redirect to HTTPS
    return 301 https://cloud.example.com$request_uri;
}

server {
    listen      443 ssl http2;
    listen [::]:443 ssl http2; # For IPv6 connections

    server_name cloud.example.com;

    # SSL certificate files
    ssl_certificate     /etc/letsencrypt/live/cloud.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloud.example.com/privkey.pem;

    # SSL settings
    include servers.d/common/ssl;
    include servers.d/common/ocsp;

    # Document root
    root /usr/share/webapps/nextcloud;

    # Directory index
    index index.php index.html /index.php$request_uri;

    # Response headers
    include servers.d/common/headers;
    add_header Referrer-Policy "no-referrer" always;
    add_header X-Robots-Tag "none" always; # Deny robot's indexing

    # Upload size limit
    client_max_body_size 512M;
    client_body_timeout 300s;

    # Hide certain paths
    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/) { return 404; }
    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)               { return 404; }

    # Rules for common locations
    include servers.d/common/locations;

    # Ensure this block, which passes PHP files to the PHP process, is above the blocks
    # which handle static assets (as seen below). If this block is not declared first,
    # then Nginx will encounter an infinite rewriting loop when it prepends `/index.php`
    # to the URI, resulting in a HTTP 500 error response.
    location ~ [^/]\.php(?:$|/) {
        fastcgi_pass unix:/run/nextcloud/nextcloud.sock;

        # PHP settings
        include servers.d/common/php;
        fastcgi_param modHeadersAvailable true;         # Avoid sending the security headers twice
        fastcgi_param front_controller_active true;     # Enable pretty urls
        fastcgi_request_buffering off;
        fastcgi_buffers 64 4K;
    }

    # Assets
    location ~ [^/]\.(?:css|js|svg|gif|png|jpe?g|ico)$ {
        try_files $uri /index.php$request_uri;
        expires 6M;         # Cache-Control policy borrowed from `.htaccess`
        access_log off;     # Optional: Don't log access to assets
    }

    # Fonts
    location ~ [^/]\.(?:woff2?|ttf|otf)$ {
        try_files $uri /index.php$request_uri;
        expires 7d;         # Cache-Control policy borrowed from `.htaccess`
        access_log off;     # Optional: Don't log access to assets
    }

    location /remote {
        return 301 /remote.php$request_uri;
    }

    location / {
        try_files $uri $uri/ /index.php$request_uri;
    }
}
